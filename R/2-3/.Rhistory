cwd()
dir()
getwd()
setwd("c:/git/wasprobot/math/MATH-560/R/")
dir()
setwd("2-3/")
dir()
population = read.table(file ="StatVillage.txt", header = TRUE)
dim(population)
population$TOTINCH
population = read.table(file ="StatVillage.txt", header = TRUE)
population$TOTINCH
dim(population)
nrow( population [ population$TOTINCH>100000 ,])
nrow( population)
dbinom(4, size=12, prob=0.2)
dbinom(4, size=12, prob=0.11)
dbinom(4, size=100, prob=0.11)
dbinom(10, size=100, prob=0.11)
for n in (10:100)
for (n in c(10:100) print(n)
for (n in c(10:100)) print(n)
prob = 0
for (n in c(10:100)) prob += dbinom(n, size=100, prob=0.11)
for (n in c(10:100)) prob = prob + dbinom(n, size=100, prob=0.11)
prob
a=10; print(a)
prob=0; for (n in c(10:100)) prob = prob + dbinom(n, size=100, prob=0.11); print(prob);
prob=0; for (n in c(10:100)) prob = prob + dbinom(n, size=100, prob=0.11); prob;
prob=0; for (n in c(10:100)) prob = prob + dbinom(n, size=100, prob=0.11); prob;
prob=0;
for (n in c(10:100)) prob = prob + dbinom(n, size=100, prob=0.11);
prob;
prob=0;
for (n in c(10:100))
prob = prob + dbinom(n, size=100, prob=0.11);
prob;
prob=0;
for (n in c(10:100))
prob = prob + dbinom(n, size=100, prob=0.11);
prob;
prob=0;
for (n in c(10:100))
prob = prob + dbinom(n, size=100, prob=0.1113);
prob;
rnorm(5 ,mean=mu,sd=sigma )
rnorm(5 ,mean=1,sd=0)
rnorm(5 ,mean=1,sd=0)
rnorm(5 ,mean=1,sd=1)
rnorm(5 ,mean=1,sd=0.3)
rnorm(5 ,mean=1,sd=0.3)
set. seed (62341)
set.seed (62341)
rnorm(5 ,mean=1,sd=0.3)
set.seed (62341)
rnorm(5 ,mean=1,sd=0.3)
nrow( population [ population$TOTINCH>100000 ,])/nrow( population )
dbinom(10, 10)
dbinom(10, 10, 0.2)
dbinom(0:10, 10, 0.2)
dbinom(0:100, 10, 0.2)
dbinom(0:100, 100, 0.2)
round(dbinom(0:100, 100, 0.2), 3)
round(dbinom(0:100, s=100, 0.2), 3)
sum(dbinom(110:600, s=600, 1/6))
factorial(10)
factorial(600)
choose(10,2)
choose(600,110)
round(choose(600,110), 10)
dim(population)
population$HHSIZE
unique(population$HHSIZE)
sort(unique(population$HHSIZE))
choose(1024, 25)
set.seed(213582)
mu=10
our.sample=rnorm(5, mean=mu, sd=2)
our.sample
x.bar=mean(our.sample)
x.bar
margin.of.error=qnorm(.975)*2/sqrt(5)
margin.of.error
lower.confidence.bound=x.bar-margin.of.error
upper.confidence.bound=x.bar+margin.of.error
mu>lower.confidence.bound & mu < upper.confidence.bound
(1:10)
