set.seed(213582)
mu=10
x=rnorm(5, mean = mu)
x
x=rnorm(5, mean = mu, sd=2)
x
set.seed(213582)
x=rnorm(5, mean = mu, sd=2)
x
x.bar=sum(x)/5
x.bar
z=(x.bar-10)/(2/sqrt(5))
z
P=2*(1-pnorm(abs(z)))
P
alpha=.05
P<alpha
set.seed(213582)
alpha=.05
mu=10
count=0
for(i in 1:10000){}
for(i in 1:10000){
x=rnorm(5, mean = mu, sd=2)
x.bar=sum(x)/5
z=(x.bar-10)/(2/sqrt(5))
P=2*(1-pnorm(abs(z)))
if (P<alpha) {
count = count+1
}
}
count
qt(.975)
qt(.975, df=7)
z
qnorm(.962)
qnorm(.965)
qnorm(.965)
qnorm(.965)*3
(qnorm(.965)*3)^2
qnorm(.95)
pnorm(.95)
rnorm(.95)
qnorm(.95)
qnorm(.95+.25)
qnorm(.95+.025)
(10.2-8.9)/(2.5/sqrt(6))
pnorm((10.2-8.9)/(2.5/sqrt(6)))
qnorm((10.2-8.9)/(2.5/sqrt(6)))
pnorm((10.2-8.9)/(2.5/sqrt(6)))
pnorm(-3.16)
pnorm(-1.8751)
mean(c(91.9,97.8,111.4,122.3,105.4,95,103.8,99.6,96.6,119.3,104.8,101.7))
1.96*9/sqrt(12)
mean(c(91.9,97.8,111.4,122.3,105.4,95,103.8,99.6,96.6,119.3,104.8,101.7))
mean(c(91.9,97.8,111.4,122.3,105.4,95,103.8,99.6,96.6,119.3,104.8,101.7))-105
(mean(c(91.9,97.8,111.4,122.3,105.4,95,103.8,99.6,96.6,119.3,104.8,101.7))-105))/(9/sqrt(12))
(mean(c(91.9,97.8,111.4,122.3,105.4,95,103.8,99.6,96.6,119.3,104.8,101.7))-105)/(9/sqrt(12))
pnorm((mean(c(91.9,97.8,111.4,122.3,105.4,95,103.8,99.6,96.6,119.3,104.8,101.7))-105)/(9/sqrt(12)))
2*pnorm((mean(c(91.9,97.8,111.4,122.3,105.4,95,103.8,99.6,96.6,119.3,104.8,101.7))-105)/(9/sqrt(12)))
pnorm(-0.068)
(508.2-515)
(508.2-515)/100
pnorm((508.2-515)/100)
1-pnorm((508.2-515)/100)
500+1.64(5)
500+1.64*5
1-pnorm((508.2-500)/100)
(508.2-500)/5
pnorm((508.2-500)/5)
1-pnorm((508.2-500)/5)
(508.2-512)/5
(508.2-515)/5
1-pnorm((508.2-515)/5)
pnorm((508.2-515)/5)
pnorm(.995)
1-pnorm(.995)
pnorm(.995)
2*pnorm(.995)
qnorm(.995)
pnorm(qnorm(.995))
1-.01
1-.01/2
1-pnorm(6.3933)
1-pnorm(6.3933)+pnorm(1.248)
pnorm(1.248)
pnorm(6.3933)
pnorm(-1)
qnorm(-1)
qnorm(1)
qnorm(.99)
qnorm(.9999)
qnorm(.9999999999)
qnorm(.99999)
qnorm(.9997)
pnorm(qnorm(.9997))
pnorm(qnorm(.999918))
mean(c(7.7, 7.4, 7.5, 7.9, 6.8, 7.9.))
mean(c(7.7, 7.4, 7.5, 7.9, 6.8, 7.9))
7.53-8
7.53-8/0.5
(7.53-8)*sqrt(6)/0.5
pnorm((7.53-8)*sqrt(6)/0.5)
2*pnorm((7.53-8)*sqrt(6)/0.5)
pnorm((7.53-8)*sqrt(6)/0.5)
2*pnorm((7.53-8)*sqrt(6)/0.5)
qnorm(95)
qnorm(.95)
qnorm(.95)*3/5
5.43-0.9869
5.43+0.9869
1.6449*3
1.6449*3/0.5
(1.6449*3/0.5)^2
42-40/40
2/40
pnorm(2/40)
1-pnorm(2/40)
134+188
78^2+46^2+2*(-0.5)*78*46
78^2+46^2
sqrt(78^2+46^2+2*(-0.5)*78*46)
1-(0.63+0.12)
1(0.25)+2(0.12)
1*0.25+2*0.12
0.25+4*0.12-0.49^2
sqrt(0.25+4*0.12-0.49^2)
.63+.25
.88^3
dt(.25, 8)
dt(.25, 7)
dt(.025, 7)
dt(.95, 7)
dt(.95, 1)
pt(.95,1)
pt(.025,1)
qt(.025,1)
qt(.95,1)
rt(.95,1)
rt(.025,1)
qt(.975, 7)
qt(.95, 7)
qt(.025, 7)
help(qt)
require(graphics)
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
tt <- seq(0, 10, len = 21)
ncp <- seq(0, 6, len = 31)
ptn <- outer(tt, ncp, function(t, d) pt(t, df = 3, ncp = d))
t.tit <- "Non-central t - Probabilities"
image(tt, ncp, ptn, zlim = c(0,1), main = t.tit)
persp(tt, ncp, ptn, zlim = 0:1, r = 2, phi = 20, theta = 200, main = t.tit,
xlab = "t", ylab = "non-centrality parameter",
zlab = "Pr(T <= t)")
plot(function(x) dt(x, df = 3, ncp = 2), -3, 11, ylim = c(0, 0.32),
main = "Non-central t - Density", yaxs = "i")
qt(.025, 7)
pt(q=0.025, df=7)
pt(q=0.025, df=7, lower.tail = F)
pt(q=0.95, df=7, lower.tail = F)
2*pt(q=0.95, df=7, lower.tail = F)
qt(0.975,df=7)
qt(0.95,df=7)
qt(0.975,df=7)
1-qt(0.975,df=7)
?qt(0.975,df=7)
qt(0.975,df=7)
qt(0.975,df=7)
qt(0.96,df=7)
9.289221 + 2.046011 *(0.8191156/sqrt(8))
9.289221 + c(-1,1) * 2.046011 * (0.8191156/sqrt(8))
c(9.289221 + c(-1,1) * 2.046011 * (0.8191156/sqrt(8)))
cwd()
dir()
getwd()
setwd("c:/git/wasprobot/math/MATH-560/R/2-3/")
dir()
population=read.table(file="StatVillage.txt", header=T)
T
dim(population)
set.seed(19891)
iN=population(1:512)
sample(10)
sample(10)
sample(10)
sample(1:10)
sample(10:20)
sample(1:512,15)
sample(1:512,15)
sample(1:512,20)
population$GOVINCH
set.seed(19891)
iN=sample(1:512,15)
iS=sample(513:1024,20)
sampleGovtPayments.North=population$GOVINCH[iN]
sampleGovtPayments.South=population$GOVINCH[iS]
sampleGovtPayments
sampleGovtPayments.North
sampleGovtPayments.South
mean(sampleGovtPayments.North)
mean(sampleGovtPayments.South)
sd(sampleGovtPayments.South)
sd(sampleGovtPayments.North)
(3474.8-7319.15)/((7828.715^2)/15)
(3474.8-7319.15)/sqrt((7828.715^2)/15 + (5318.922^2)/20)
(3474.8-7319.15)/sqrt( (7828.715^2)/15 + (5318.922^2)/20 )
qt(0.96,df=7)
qt(0.05,df=19)
qt(1-0.05,df=19)
((7828.715)^2/15+(5318.922)^2/20)^2
/(1/14)*(7828.715^2/15)^2+(1/19)*(5318.922^2/20)^2
((7828.715)^2/15+(5318.922)^2/20)^2/(1/14)*(7828.715^2/15)^2+(1/19)*(5318.922^2/20)^2
((7828.715)^2/15+(5318.922)^2/20)^2/((1/14)*(7828.715^2/15)^2+(1/19)*(5318.922^2/20)^2)
((7828.715)^2/15+(5318.922)^2/20)^2 / ((1/14)*(7828.715^2/15)^2+(1/19)*(5318.922^2/20)^2)
population$GOVINCH[1:512]
dim(population$GOVINCH[1:512])
mean(population$GOVINCH[1:512])
sum(population$GOVINCH[1:512])
mean(population$GOVINCH[1:2])
mean(population$GOVINCH[1:512])
mean(population$GOVINCH[1:])
mean(population$GOVINCH[513:1024])
mean(c(population$GOVINCH[513:1024]))
mean(c(c(population$GOVINCH[513:1024])))
1.96^2
3.8416/0.001
3.8416/0.004
0.1^2
3.8416/0.04
np(1)
pnorm(0.95)
pnorm(0.975)
pnorm(1-0.975)
rnorm(1-0.975)
rnorm(0.975)
?rnorm
dnorm(0.975)
qnorm(0.975)
qnorm(0.95)
qnorm(0.99+0.99/2)
0.99/2
0.99/2+0.99
(1-0.99)/2
(1-0.99)/2+.99
qnorm((1-0.99)/2+.99)
qnorm((1-0.95)/2+.95)
0.27 + 2.575829 * sqrt(0.27*(1-0.27)/100)
0.27 + c(-1,1) * 2.575829 * sqrt(0.27*(1-0.27)/100)
1/6
1/6
(0.27-0.167)/sqrt(0.27*0.73/100)
pnorm(1.34)
pnorm((0.27-0.167)/sqrt(0.27*0.73/100))
1-pnorm((0.27-0.167)/sqrt(0.27*0.73/100))
2*(1-pnorm((0.27-0.167)/sqrt(0.27*0.73/100)))
read.table("c:/git/wasprobot/math/MATH-560/project/data/healthcare-dataset-stroke-data.csv")
read.table(file = "c:/git/wasprobot/math/MATH-560/project/data/healthcare-dataset-stroke-data.csv")
read.csv("c:/git/wasprobot/math/MATH-560/project/data/healthcare-dataset-stroke-data.csv")
stroke=read.csv("c:/git/wasprobot/math/MATH-560/project/data/healthcare-dataset-stroke-data.csv")
dim(stroke)
stroke$smoking_status
stroke %>% group_by()
grouping()
grouping(stroke)
library("tidyverse")
mean(stroke$age)
mean(stroke$ever_married)
mean(stroke$stroke)
mean(stroke$heart_disease)
stroke$heart_disease
mean(stroke$heart_disease)
mean(stroke$age)
hist(stroke$age)
